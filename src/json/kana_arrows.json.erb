<%=
require "json"
JAPANESE_KANA_PRESEED = "japanese_kana pressed"
SYMBOLS_AND_CONTROLS = {
    o: "delete_or_backspace",
    semicolon: "return_or_enter",
    quote: "grave_accent_and_tilde",
    spacebar: {key_code: "hyphen", modifiers: ["left_shift"]},
    q: "escape",
    w: {key_code: "equal_sign", modifiers: ["left_shift"]},
    e: {key_code: "open_bracket", modifiers: ["left_shift"]},
    r: {key_code: "close_bracket", modifiers: ["left_shift"]},
    t: {key_code: "grave_accent_and_tilde", modifiers: ["left_shift"]},
    a: "hyphen",
    s: "equal_sign",
    d: {key_code: "9", modifiers: ["left_shift"]},
    f: {key_code: "0", modifiers: ["left_shift"]},
    g: {key_code: "backslash", modifiers: ["left_shift"]},
    z: {key_code: "comma", modifiers: ["left_shift"]},
    x: {key_code: "period", modifiers: ["left_shift"]},
    c: "open_bracket",
    v: "close_bracket",
    b: "backslash",
}
KEYMAPS = [
    {h: "left_arrow", j: "down_arrow", k: "up_arrow", l: "right_arrow"}.merge(SYMBOLS_AND_CONTROLS),
    {i: "up_arrow", j: "left_arrow", k: "down_arrow", l: "right_arrow"}.merge(SYMBOLS_AND_CONTROLS),
]

rules = KEYMAPS.map {|keymap|
    {
        description: "かな + #{keymap.keys[0..3].map(&:to_s).join} to arrow keys",
        manipulators: [
            *keymap.map {|from, to|
                to = case to
                when String
                    {key_code: to}
                else
                    to
                end

                {
                    type: "basic",
                    from: {
                        key_code: from,
                        modifiers: {optional: %w(any)},
                    },
                    to: [to],
                    conditions: [{
                        type: "variable_if",
                        name: JAPANESE_KANA_PRESEED,
                        value: 1,
                    }],
                }
            },
            {
                type: "basic",
                from: {
                    key_code: "japanese_kana",
                    modifiers: {optional: %w(any)},
                },
                to: [{
                    set_variable: {
                        name: JAPANESE_KANA_PRESEED,
                        value: 1,
                    },
                }],
                to_if_alone: [{
                    key_code: "japanese_kana",
                }],
                to_after_key_up: [{
                    set_variable: {
                        name: JAPANESE_KANA_PRESEED,
                        value: 0,
                    },
                }]
            },
        ],
    }
}

h = {
    title: "かな + hjkl/ijkl to arrow keys",
    rules: rules,
}

JSON.pretty_generate(h)
%>
